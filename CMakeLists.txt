CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(RBTreeAndMap)

SET(SELF Source)
SET(DEPENDENCE Dependence)
SET(LIB Lib)
SET(BIN Bin)
SET(PRODUCT_VERSION 1.0)

SET(CMAKE_C_COMPILER g++)
SET(CMAKE_CXX_COMPILER g++)
SET(CMAKE_DEBUG_POSTFIX D)
SET(CMAKE_BUILD_TYPE DEBUG)
SET(CMAKE_C_FLAGS_DEBUG "-std=c99")
SET(CMAKE_CXX_FLAGS_DEBUG "-std=c++0x")
SET(CMAKE_C_FLAGS_RELEASE "-std=c99")
SET(CMAKE_CXX_FLAGS_RELEASE "-std=c++0x")

IF(WIN32)
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MDd /Zi /Od /Ob0 /RTC1")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd /Zi /Od /Ob0 /RTC1")
set(CMAKE_C_FLAGS_RELEASE   "${CMAKE_C_FLAGS_RELEASE} /MD /O2 /Ob2") 
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD /O2 /Ob2")
set(CMAKE_EXE_LINKER_FLAGS "/MANIFEST:NO")
ENDIF(WIN32)

IF(UNIX)
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -g -D_DEBUG")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -D_DEBUG")
ENDIF(UNIX)

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})

SET(SOURCE_DIR ${PROJECT_SOURCE_DIR})
SET(INCLUDE_DIR ${PROJECT_SOURCE_DIR})
SET(DEPENDENCE_DIR ${PROJECT_SOURCE_DIR}/${DEPENDENCE})
SET(LIB_DIR ${PROJECT_SOURCE_DIR}/${LIB})
SET(BIN_DIR ${PROJECT_SOURCE_DIR}/${BIN})

OPTION(PRODUCT_INSTALL "Install libs, includes, and cmake scripts" ON)

MESSAGE(STATUS ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS ${PROJECT_BINARY_DIR})
MESSAGE(STATUS ${PRODUCT_VERSION})
MESSAGE(STATUS ${SOURCE_DIR})
MESSAGE(STATUS ${INCLUDE_DIR})
MESSAGE(STATUS ${DEPENDENCE_DIR})
MESSAGE(STATUS ${CMAKE_C_COMPILER})
MESSAGE(STATUS ${CMAKE_DEBUG_POSTFIX})
MESSAGE(STATUS ${CMAKE_BUILD_TYPE})
MESSAGE(STATUS ${CMAKE_CXX_COMPILER})
MESSAGE(STATUS ${CMAKE_C_FLAGS_DEBUG})
MESSAGE(STATUS ${CMAKE_CXX_FLAGS_DEBUG})

ADD_SUBDIRECTORY(${SELF})
